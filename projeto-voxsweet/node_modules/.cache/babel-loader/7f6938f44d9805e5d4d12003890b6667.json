{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nina Fernandes\\\\Desktop\\\\voxsweet-projeto\\\\projeto-voxsweet\\\\src\\\\components\\\\Signup.js\";\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup'; // import { TextField } from \"./TextField\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  const validate = Yup.object({\n    email: Yup.string().max(100, 'Você excedeu a quantidade máxima de caracteres para o email.').required('O e-mail é obrigatório.'),\n    senha: Yup.string().max(50, 'A senha deve ter no máximo 50 caracteres.').min(6, 'A senha deve ter no mínimo 6 caracteres.').required('A senha é obrigatório.')\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        console.log(\"Logging in\", values);\n      }, 500);\n    },\n    children: props => {\n      const {\n        values,\n        touched,\n        erros,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        className: \"form-box\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"form-control-style\",\n          autocomplete: \"off\",\n          onSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Nina Fernandes/Desktop/voxsweet-projeto/projeto-voxsweet/src/components/Signup.js"],"names":["React","Formik","Form","Yup","Login","validate","object","email","string","max","required","senha","min","password","values","setSubmitting","setTimeout","console","log","props","touched","erros","isSubmitting","handleChange","handleBlur","handleSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB,C,CACA;;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACvB,QAAMC,QAAQ,GAAGF,GAAG,CAACG,MAAJ,CAAW;AACxBC,IAAAA,KAAK,EAAEJ,GAAG,CAACK,MAAJ,GACFC,GADE,CACE,GADF,EACO,8DADP,EAEFC,QAFE,CAEO,yBAFP,CADiB;AAIxBC,IAAAA,KAAK,EAAER,GAAG,CAACK,MAAJ,GACFC,GADE,CACE,EADF,EACM,2CADN,EAEFG,GAFE,CAEE,CAFF,EAEK,0CAFL,EAGFF,QAHE,CAGO,wBAHP;AAJiB,GAAX,CAAjB;AAUA,sBACI,QAAC,MAAD;AACI,IAAA,aAAa,EAAE;AACXH,MAAAA,KAAK,EAAE,EADI;AAEXM,MAAAA,QAAQ,EAAE;AAFC,KADnB;AAKI,IAAA,QAAQ,EAAE,CAACC,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,KAA+B;AACrCC,MAAAA,UAAU,CAAC,MAAM;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,MAA1B;AACH,OAFS,EAEP,GAFO,CAAV;AAGH,KATL;AAAA,cAaKK,KAAK,IAAI;AACN,YAAM;AACFL,QAAAA,MADE;AAEFM,QAAAA,OAFE;AAGFC,QAAAA,KAHE;AAIFC,QAAAA,YAJE;AAKFC,QAAAA,YALE;AAMFC,QAAAA,UANE;AAOFC,QAAAA;AAPE,UAQFN,KARJ;;AAUA;AAAA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,oBAAhB;AAAqC,UAAA,YAAY,EAAC,KAAlD;AAAwD,UAAA,QAAQ,EAAEM;AAAlE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAMH;AA9BL;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CA9CM;KAAMrB,K","sourcesContent":["import React from 'react'\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\n// import { TextField } from \"./TextField\"\r\n\r\nexport const Login = () => {\r\n    const validate = Yup.object({\r\n        email: Yup.string()\r\n            .max(100, 'Você excedeu a quantidade máxima de caracteres para o email.')\r\n            .required('O e-mail é obrigatório.'),\r\n        senha: Yup.string()\r\n            .max(50, 'A senha deve ter no máximo 50 caracteres.')\r\n            .min(6, 'A senha deve ter no mínimo 6 caracteres.')\r\n            .required('A senha é obrigatório.')\r\n    });\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: \"\",\r\n                password: \"\"\r\n            }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                setTimeout(() => {\r\n                    console.log(\"Logging in\", values)\r\n                }, 500);\r\n            }}\r\n            \r\n        >\r\n\r\n            {props => {\r\n                const {\r\n                    values,\r\n                    touched,\r\n                    erros,\r\n                    isSubmitting,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                } = props;\r\n\r\n                <div className=\"form-box\">\r\n                    <Form className=\"form-control-style\" autocomplete=\"off\" onSubmit={handleSubmit}>\r\n                        \r\n\r\n                    </Form>\r\n                </div>\r\n            }}\r\n\r\n        </Formik>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}