{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nina Fernandes\\\\Desktop\\\\voxsweet-projeto\\\\projeto-voxsweet\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport { Formik, useField, Form } from 'formik';\nimport * as Yup from 'yup';\nimport principalImg from './main-assets/cellphone.png';\nimport voxsweetLogo from './main-assets/Logo.png';\nimport { Login } from './components/Signup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TextInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(TextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = TextInput;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().max(100, 'Você excedeu a quantidade máxima de caracteres para o email.').required('O e-mail é obrigatório.'),\n      senha: Yup.string().max(50, 'A senha deve ter no máximo 50 caracteres.').min(6, 'A senha deve ter no mínimo 6 caracteres.').required('A senha é obrigatório.')\n    }),\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(value, null, 2));\n        resetForm();\n        setSubmitting(false);\n      }, 3000);\n    },\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        resetForm();\n        setSubmitting(false);\n      }, 3000);\n    },\n    children: props => /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n} // function App() {\n//   return (\n//     <div className=\"container-fluid\">\n//       <div className=\"row\">\n//         <div className=\"col-sm \">\n//           <img className=\"principal-img img-fluid\" src={principalImg} alt=\"\"/>\n//         </div>\n//         <div className=\"col-sm principal-content\">\n//           <img className=\"logo-img img-fluid\" src={voxsweetLogo} alt=\"\"/>\n//            <h1 className=\"font-vosweet text-items\">Vosweet</h1>\n//                 <p className=\"main-text text-items\">\n//                 Uma mensagem em um click.\n//                 </p>\n//             <Login />\n//       </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextInput\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/Nina Fernandes/Desktop/voxsweet-projeto/projeto-voxsweet/src/App.js"],"names":["React","Formik","useField","Form","Yup","principalImg","voxsweetLogo","Login","TextInput","label","props","field","meta","touched","error","App","email","password","object","string","max","required","senha","min","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","value"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,QAAuC,QAAvC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,KAAT,QAAsB,qBAAtB;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AAAA;;AACzC,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBV,QAAQ,CAACQ,KAAD,CAA9B;AAEA,sBACE;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA,SAAkCC,KAAlC;AAAA,SAA6CD;AAA7C;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,KAArB,gBACC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAAwBF,IAAI,CAACE;AAA7B;AAAA;AAAA;AAAA;AAAA,YADD,GAEG,IAJN;AAAA,kBADF;AAQD,CAXD;;GAAMN,S;UACkBN,Q;;;KADlBM,S;;AAaN,SAASO,GAAT,GAAe;AACb,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,QAAQ,EAAE;AAFG,KADjB;AAME,IAAA,gBAAgB,EAAEb,GAAG,CAACc,MAAJ,CAAW;AAC3BF,MAAAA,KAAK,EAAEZ,GAAG,CAACe,MAAJ,GACJC,GADI,CACA,GADA,EACK,8DADL,EAEJC,QAFI,CAEK,yBAFL,CADoB;AAI3BC,MAAAA,KAAK,EAAElB,GAAG,CAACe,MAAJ,GACJC,GADI,CACA,EADA,EACI,2CADJ,EAEJG,GAFI,CAEA,CAFA,EAEG,0CAFH,EAGJF,QAHI,CAGK,wBAHL;AAJoB,KAAX,CANpB;AAgBE,IAAA,QAAQ,EAAE,CAACG,MAAD,EAAS;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,KAAT,KAA0C;AAClDC,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeC,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAD,CAAL;AACAL,QAAAA,SAAS;AACTD,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAJS,EAIP,IAJO,CAAV;AAKD,KAtBH;AAuBE,IAAA,QAAQ,EAAE,CAACD,MAAD,EAAS;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,KAAT,KAA0C;AAClDC,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeN,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAE,QAAAA,SAAS;AACTD,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAJS,EAIP,IAJO,CAAV;AAKD,KA7BH;AAAA,cA+BGf,KAAK,iBACJ,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAhCJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,C,CAuBD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;MApFSK,G;AAsFT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\nimport { Formik, useField, Form } from 'formik';\nimport * as Yup from 'yup';\nimport principalImg from './main-assets/cellphone.png';\nimport voxsweetLogo from './main-assets/Logo.png';\nimport { Login } from './components/Signup'\n\nconst TextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <>\n      <input className=\"text-input\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  )\n}\n\nfunction App() {\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n\n      validationSchema={Yup.object({\n        email: Yup.string()\n          .max(100, 'Você excedeu a quantidade máxima de caracteres para o email.')\n          .required('O e-mail é obrigatório.'),\n        senha: Yup.string()\n          .max(50, 'A senha deve ter no máximo 50 caracteres.')\n          .min(6, 'A senha deve ter no mínimo 6 caracteres.')\n          .required('A senha é obrigatório.')\n      })}\n\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(value, null, 2));\n          resetForm();\n          setSubmitting(false);\n        }, 3000)\n      }}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          resetForm();\n          setSubmitting(false);\n        }, 3000)\n      }}\n    >\n      {props => (\n        <Form>\n          \n        </Form>\n      )}\n    </Formik>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function App() {\n//   return (\n//     <div className=\"container-fluid\">\n//       <div className=\"row\">\n//         <div className=\"col-sm \">\n//           <img className=\"principal-img img-fluid\" src={principalImg} alt=\"\"/>\n//         </div>\n\n//         <div className=\"col-sm principal-content\">\n//           <img className=\"logo-img img-fluid\" src={voxsweetLogo} alt=\"\"/>\n//            <h1 className=\"font-vosweet text-items\">Vosweet</h1>\n//                 <p className=\"main-text text-items\">\n//                 Uma mensagem em um click.\n//                 </p>\n\n//             <Login />\n\n//       </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}