{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nina Fernandes\\\\Desktop\\\\voxsweet-projeto\\\\projeto-voxsweet\\\\src\\\\components\\\\Signup.js\";\nimport React from 'react';\nimport { Formik, Form, yupToFormErrors } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().max(100, 'Você excedeu a quantidade máxima de caracteres para o email.').required('O e-mail é obrigatório.'),\n      senha: Yup.string().max(50, 'A senha deve ter no máximo 50 caracteres.').min(6, 'A senha deve ter no mínimo 6 caracteres.').required('A senha é obrigatório.')\n    }),\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(value, null, 2));\n        resetForm();\n        setSubmitting(false);\n      }, 3000);\n    },\n    children: formik => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(formik.values), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-box\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"form-control-style\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"login-text\",\n            children: \" Fa\\xE7a o login na sua conta! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"E-mail\",\n            className: \"input-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Senha\",\n            className: \"input-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-button\",\n            type: \"submit\",\n            children: \" Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"linha-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-cadastro\",\n            children: [\"N\\xE3o tem uma conta? \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#cadastro\",\n              className: \"cadastro-link\",\n              children: \"Cadastre-se\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 65\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Nina Fernandes/Desktop/voxsweet-projeto/projeto-voxsweet/src/components/Signup.js"],"names":["React","Formik","Form","yupToFormErrors","Yup","Login","email","password","object","string","max","required","senha","min","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","value","formik","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,eAAvB,QAA8C,QAA9C;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACvB,sBACI,QAAC,MAAD;AACA,IAAA,aAAa,EAAE;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KADf;AAMI,IAAA,gBAAgB,EAAIH,GAAG,CAACI,MAAJ,CAAW;AAC3BF,MAAAA,KAAK,EAAEF,GAAG,CAACK,MAAJ,GACNC,GADM,CACF,GADE,EACG,8DADH,EAENC,QAFM,CAEG,yBAFH,CADoB;AAI3BC,MAAAA,KAAK,EAAER,GAAG,CAACK,MAAJ,GACNC,GADM,CACF,EADE,EACE,2CADF,EAENG,GAFM,CAEF,CAFE,EAEC,0CAFD,EAGNF,QAHM,CAGG,wBAHH;AAJoB,KAAX,CANxB;AAgBI,IAAA,QAAQ,EAAE,CAACG,MAAD,EAAS;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,KAAT,KAA0C;AAChDC,MAAAA,UAAU,CAAC,MAAM;AACbC,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAgBC,KAAhB,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAL,QAAAA,SAAS;AACTD,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH,OAJS,EAIP,IAJO,CAAV;AAKH,KAtBL;AAAA,cAyBKO,MAAM,iBACP;AAAA,iBACCC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACR,MAAnB,CADD,eAEA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,oBAAhB;AAAA,kCAEI;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AACA,YAAA,IAAI,EAAC,OADL;AAEA,YAAA,IAAI,EAAC,OAFL;AAGA,YAAA,WAAW,EAAC,QAHZ;AAIA,YAAA,SAAS,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBAHJ,eASI;AACA,YAAA,IAAI,EAAC,UADL;AAEA,YAAA,IAAI,EAAC,UAFL;AAGA,YAAA,WAAW,EAAC,OAHZ;AAIA,YAAA,SAAS,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBATJ,eAeI;AAAQ,YAAA,SAAS,EAAC,cAAlB;AAAgC,YAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ,eAiBI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAjBJ,eAmBI;AAAG,YAAA,SAAS,EAAC,eAAb;AAAA,8DAAgD;AAAG,cAAA,IAAI,EAAC,WAAR;AAAoB,cAAA,SAAS,EAAC,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4DH,CA7DM;KAAMT,K","sourcesContent":["import React from 'react'\r\nimport { Formik, Form, yupToFormErrors } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <Formik\r\n        initialValues={{\r\n            email: '',\r\n            password: '',  \r\n            }}\r\n\r\n            validationSchema = {Yup.object({\r\n                email: Yup.string()\r\n                .max(100, 'Você excedeu a quantidade máxima de caracteres para o email.')\r\n                .required('O e-mail é obrigatório.'),\r\n                senha: Yup.string()\r\n                .max(50, 'A senha deve ter no máximo 50 caracteres.')\r\n                .min(6, 'A senha deve ter no mínimo 6 caracteres.')\r\n                .required('A senha é obrigatório.')\r\n            })}\r\n        \r\n            onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                setTimeout(() => {\r\n                    alert(JSON.stringify( value, null, 2));\r\n                    resetForm();\r\n                    setSubmitting(false);\r\n                }, 3000)\r\n            }}\r\n        >\r\n\r\n            {formik => (\r\n            <div>\r\n            {console.log(formik.values)}\r\n            <div className=\"form-box\">\r\n            <Form className=\"form-control-style\">\r\n\r\n                <h1 className=\"login-text\"> Faça o login na sua conta! </h1>\r\n                <input\r\n                name=\"email\" \r\n                type=\"email\" \r\n                placeholder=\"E-mail\"\r\n                className=\"input-box\" />\r\n\r\n                <input\r\n                name=\"password\" \r\n                type=\"password\" \r\n                placeholder=\"Senha\"\r\n                className=\"input-box\"/>\r\n\r\n                <button className=\"login-button\"type=\"submit\"> Entrar</button>\r\n\r\n                <div className=\"linha-button\"></div>\r\n\r\n                <p className=\"text-cadastro\">Não tem uma conta? <a href=\"#cadastro\" className=\"cadastro-link\">Cadastre-se</a></p>\r\n\r\n                {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n            </Form>\r\n            </div>\r\n            </div>    \r\n            )}\r\n\r\n            \r\n        </Formik>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}