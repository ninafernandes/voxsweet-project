{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nina Fernandes\\\\Desktop\\\\voxsweet-projeto\\\\projeto-voxsweet\\\\src\\\\components\\\\Signup.js\";\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { TextField } from \"./TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  const validate = Yup.object({\n    email: Yup.string().max(100, 'Você excedeu a quantidade máxima de caracteres para o email.').required('O e-mail é obrigatório.'),\n    senha: Yup.string().max(50, 'A senha deve ter no máximo 50 caracteres.').min(6, 'A senha deve ter no mínimo 6 caracteres.').required('A senha é obrigatório.')\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        console.log(\"Logging in\", values);\n      }, 500);\n    },\n    validationSchema: validate,\n    children: formik => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(formik.values), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-box\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"form-control-style\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"login-text\",\n            children: \" Fa\\xE7a o login na sua conta! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"E-mail\",\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"E-mail\",\n            className: \"input-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Senha\",\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Senha\",\n            className: \"input-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-button\",\n            type: \"submit\",\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"linha-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-cadastro\",\n            children: [\"N\\xE3o tem uma conta? \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#cadastro\",\n              className: \"cadastro-link\",\n              children: \"Cadastre-se\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 65\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Nina Fernandes/Desktop/voxsweet-projeto/projeto-voxsweet/src/components/Signup.js"],"names":["React","Formik","Form","Yup","TextField","Login","validate","object","email","string","max","required","senha","min","password","values","setSubmitting","setTimeout","console","log","formik"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACvB,QAAMC,QAAQ,GAAGH,GAAG,CAACI,MAAJ,CAAW;AACxBC,IAAAA,KAAK,EAAEL,GAAG,CAACM,MAAJ,GACNC,GADM,CACF,GADE,EACG,8DADH,EAENC,QAFM,CAEG,yBAFH,CADiB;AAIxBC,IAAAA,KAAK,EAAET,GAAG,CAACM,MAAJ,GACNC,GADM,CACF,EADE,EACE,2CADF,EAENG,GAFM,CAEF,CAFE,EAEC,0CAFD,EAGNF,QAHM,CAGG,wBAHH;AAJiB,GAAX,CAAjB;AAUA,sBACI,QAAC,MAAD;AACA,IAAA,aAAa,EAAE;AACXH,MAAAA,KAAK,EAAE,EADI;AAEXM,MAAAA,QAAQ,EAAE;AAFC,KADf;AAKQ,IAAA,QAAQ,EAAE,CAACC,MAAD,EAAS;AAACC,MAAAA;AAAD,KAAT,KAA6B;AACnCC,MAAAA,UAAU,CAAC,MAAM;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,MAA1B;AACH,OAFS,EAEP,GAFO,CAAV;AAGH,KATT;AAUI,IAAA,gBAAgB,EAAET,QAVtB;AAAA,cAaKc,MAAM,iBACP;AAAA,iBACCF,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACL,MAAnB,CADD,eAEA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BAEA,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,oBAAhB;AAAA,kCAEI;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,SAAD;AACA,YAAA,KAAK,EAAC,QADN;AAEA,YAAA,IAAI,EAAC,OAFL;AAGA,YAAA,IAAI,EAAC,OAHL;AAIA,YAAA,WAAW,EAAC,QAJZ;AAKA,YAAA,SAAS,EAAC;AALV;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAUI,QAAC,SAAD;AACA,YAAA,KAAK,EAAC,OADN;AAEA,YAAA,IAAI,EAAC,UAFL;AAGA,YAAA,IAAI,EAAC,UAHL;AAIA,YAAA,WAAW,EAAC,OAJZ;AAKA,YAAA,SAAS,EAAC;AALV;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAiBI;AAAQ,YAAA,SAAS,EAAC,cAAlB;AAAgC,YAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBJ,eAmBI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAnBJ,eAqBI;AAAG,YAAA,SAAS,EAAC,eAAb;AAAA,8DAAgD;AAAG,cAAA,IAAI,EAAC,WAAR;AAAoB,cAAA,SAAS,EAAC,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH,CA5DM;KAAMV,K","sourcesContent":["import React from 'react'\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { TextField } from \"./TextField\"\r\n\r\nexport const Login = () => {\r\n    const validate = Yup.object({\r\n        email: Yup.string()\r\n        .max(100, 'Você excedeu a quantidade máxima de caracteres para o email.')\r\n        .required('O e-mail é obrigatório.'),\r\n        senha: Yup.string()\r\n        .max(50, 'A senha deve ter no máximo 50 caracteres.')\r\n        .min(6, 'A senha deve ter no mínimo 6 caracteres.')\r\n        .required('A senha é obrigatório.')\r\n    });\r\n\r\n    return (\r\n        <Formik\r\n        initialValues={{\r\n            email: \"\",\r\n            password: \"\"\r\n            }}\r\n                onSubmit={(values, {setSubmitting}) => {\r\n                    setTimeout(() => {\r\n                        console.log(\"Logging in\", values)\r\n                    }, 500);\r\n                }}\r\n            validationSchema={validate}\r\n        >\r\n\r\n            {formik => (\r\n            <div>\r\n            {console.log(formik.values)}\r\n            <div className=\"form-box\">\r\n                \r\n            <Form className=\"form-control-style\">\r\n\r\n                <h1 className=\"login-text\"> Faça o login na sua conta! </h1>\r\n                <TextField\r\n                label=\"E-mail\"\r\n                name=\"email\" \r\n                type=\"email\" \r\n                placeholder=\"E-mail\"\r\n                className=\"input-box\" />\r\n\r\n                <TextField\r\n                label=\"Senha\"\r\n                name=\"password\" \r\n                type=\"password\" \r\n                placeholder=\"Senha\"\r\n                className=\"input-box\"/>\r\n\r\n                <button className=\"login-button\"type=\"submit\">Entrar</button>\r\n\r\n                <div className=\"linha-button\"></div>\r\n\r\n                <p className=\"text-cadastro\">Não tem uma conta? <a href=\"#cadastro\" className=\"cadastro-link\">Cadastre-se</a></p>\r\n\r\n                {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n            </Form>\r\n            </div>\r\n            </div>    \r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}