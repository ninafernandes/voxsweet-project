{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nina Fernandes\\\\Desktop\\\\voxsweet-projeto\\\\projeto-voxsweet\\\\src\\\\components\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form, yupToFormErrors, useField } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst caixaTexto = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(caixaTexto, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\nexport const Login = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().max(100, 'Você excedeu a quantidade máxima de caracteres para o email.').required('O e-mail é obrigatório.'),\n      senha: Yup.string().max(50, 'A senha deve ter no máximo 50 caracteres.').min(6, 'A senha deve ter no mínimo 6 caracteres.').required('A senha é obrigatório.')\n    }),\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(value, null, 2));\n        resetForm();\n        setSubmitting(false);\n      }, 3000);\n    },\n    children: formik => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(formik.values), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-box\",\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          className: \"form-control-style\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"login-text\",\n            children: \" Fa\\xE7a o login na sua conta! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"caixaTexto\", {\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"E-mail\",\n            className: \"input-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"caixaTexto\", {\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Senha\",\n            className: \"input-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-button\",\n            type: \"submit\",\n            children: \" Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"linha-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-cadastro\",\n            children: [\"N\\xE3o tem uma conta? \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#cadastro\",\n              className: \"cadastro-link\",\n              children: \"Cadastre-se\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 81\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Nina Fernandes/Desktop/voxsweet-projeto/projeto-voxsweet/src/components/Signup.js"],"names":["React","Formik","Form","yupToFormErrors","useField","Yup","caixaTexto","label","props","field","meta","touched","error","Login","email","password","object","string","max","required","senha","min","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","value","formik","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Formik, Form, yupToFormErrors, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nconst caixaTexto = ({ label, ...props}) => {\r\n    const[field, meta] = useField(props);\r\n  \r\n    return (\r\n      <>\r\n      <input className=\"text-input\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n        </>\r\n    )\r\n  }\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: '',\r\n                password: '',\r\n            }}\r\n\r\n            validationSchema={Yup.object({\r\n                email: Yup.string()\r\n                    .max(100, 'Você excedeu a quantidade máxima de caracteres para o email.')\r\n                    .required('O e-mail é obrigatório.'),\r\n                senha: Yup.string()\r\n                    .max(50, 'A senha deve ter no máximo 50 caracteres.')\r\n                    .min(6, 'A senha deve ter no mínimo 6 caracteres.')\r\n                    .required('A senha é obrigatório.')\r\n            })}\r\n\r\n            onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                setTimeout(() => {\r\n                    alert(JSON.stringify(value, null, 2));\r\n                    resetForm();\r\n                    setSubmitting(false);\r\n                }, 3000)\r\n            }}\r\n        >\r\n\r\n            {formik => (\r\n                <div>\r\n                    {console.log(formik.values)}\r\n                    <div className=\"form-box\">\r\n                        {props => (\r\n                            <Form className=\"form-control-style\">\r\n\r\n                                <h1 className=\"login-text\"> Faça o login na sua conta! </h1>\r\n                                <caixaTexto\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"E-mail\"\r\n                                    className=\"input-box\" />\r\n\r\n                                <caixaTexto\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Senha\"\r\n                                    className=\"input-box\" />\r\n\r\n                                <button className=\"login-button\" type=\"submit\"> Entrar</button>\r\n\r\n                                <div className=\"linha-button\"></div>\r\n\r\n                                <p className=\"text-cadastro\">Não tem uma conta? <a href=\"#cadastro\" className=\"cadastro-link\">Cadastre-se</a></p>\r\n\r\n\r\n                            </Form>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n\r\n\r\n        </Formik>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}